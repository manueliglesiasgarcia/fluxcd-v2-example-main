---
apiVersion: v1
kind: Namespace
metadata:
  name: bitwarden
  labels:
    name: bitwarden
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bitwarden
  namespace: bitwarden
  annotations:
    flux.weave.works/locked: "true"
spec:
  interval: 5m
  releaseName: bitwardenrs
  chart:
    spec:
      chart: bitwardenrs
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  values:
    image:
      repository: bitwardenrs/server
      pullPolicy: IfNotPresent
      tag: "1.20.0"
    ingress:
      enabled: true
      hosts:
        - host: bitwarden.test.com
          paths: ["/"]
      annotations:
        kubernetes.io/ingress.class: nginx
        ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      tls:
      - secretName: bitwarden-general-tls
        hosts:
          - bitwarden.test.com
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
    bitwardenrs:
      domain: "https://bitwarden.test.com"
      signupsAllowed: true
      gui:
        # If you set a different port here, you must also provide it under env
        port: 80
      websockets:
        enabled: true
        port: 3012
      admin:
        enabled: true
        disableAdminToken: false
        existingSecret:
          enabled: false
          name: ""
          tokenKey: ""
      smtp:
        enabled: true
        # SMTP hostname, required if SMTP is enabled
        host: "smtp.test.com"
        # SMTP sender e-mail address, required if SMTP is enabled
        from: "bitwarden@test.com"
        # SMTP sender name, defaults to 'Bitwarden_RS'
        fromName: "Test Bitwarden"
        # Enable SSL connection
        ssl: false
        # SMTP port
        port: 25
        # SMTP username
        user: ""
        # SMTP password. Required is user is specified, ignored if no user provided
        password: ""
      externalDatabase:
        enabled: true
        # Supported values: 'mysql', 'postgresql'.
        type: "postgresql"
        # Database host. Required if external database is enabled.
        host: "bitwarden-psql.bitwarden"
        # Database port. Optional, default value is specific to the database backend.
        port: "5432"
        # Database name.
        database: "bitwarden"
        # Use existing secret for database credentials.
        existingSecret:
          enabled: true
          name: "postgres.bitwarden-psql.credentials.postgresql.acid.zalan.do"
          userKey: "username"
          # Special characters in the password value must be escaped with percent encoding.
          passwordKey: "password"
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      storageSize: 50Gi

---
apiVersion: acid.zalan.do/v1
kind: postgresql
metadata:
  name: bitwarden-psql
  namespace: bitwarden
spec:
  teamId: "bitwarden"
  volume:
    size: 50Gi
  numberOfInstances: 2
  users:
    postgres:  # database owner
    - superuser
    - createdb
  databases: {}
  preparedDatabases: {}
  postgresql:
    version: "12"
    parameters:  # Expert section
      # Memory settings recommendations
      shared_buffers: "8042MB"
      effective_cache_size: "24126MB"
      maintenance_work_mem: "2047MB"
      work_mem: "20587kB"
      # Parallelism settings recommendations
      timescaledb.max_background_workers: "32"
      max_worker_processes: "64"
      max_parallel_workers_per_gather: "2"
      max_parallel_workers: "32"
      # WAL settings recommendations
      wal_buffers: "16MB"
      min_wal_size: "512MB"
      max_wal_size: "1GB"
      # Miscellaneous settings recommendations
      default_statistics_target: "500"
      random_page_cost: "1.1"
      checkpoint_completion_target: "0.9"
      max_connections: "100"
      max_locks_per_transaction: "256"
      autovacuum_max_workers: "10"
      autovacuum_naptime: "10"
      effective_io_concurrency: "200"
  resources:
    limits:
      cpu: "1"
      memory: "2Gi"
    requests:
      cpu: "300m"
      memory: "500Mi"
  sidecars:
    - name: "exporter"
      image: "harbor.test.com/docker-images/postgres_exporter:v0.8.0.1"
      ports:
        - name: exporter
          containerPort: 9187
          protocol: TCP
      resources:
        limits:
          # cpu: 300m
          memory: 256M
        requests:
          # cpu: 300m
          memory: 256M
      env:
        - name: "DATA_SOURCE_URI"
          value: "localhost/postgres?sslmode=require"
        - name: "DATA_SOURCE_USER"
          valueFrom:
            secretKeyRef:
              name: postgres.bitwarden-psql.credentials.postgresql.acid.zalan.do
              key: username
        - name: "DATA_SOURCE_PASS"
          valueFrom:
            secretKeyRef:
              name: postgres.bitwarden-psql.credentials.postgresql.acid.zalan.do
              key: password
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: postgres-backup-s3
  namespace: bitwarden
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: postgresql-backup-s3
            image: harbor.test.com/devops/postgresql-backup-s3:master-e2f11f4f
            imagePullPolicy: IfNotPresent
            env:
            - name: POSTGRES_DATABASE
              value: "bitwarden"
            - name: POSTGRES_HOST
              value: "bitwarden-psql.bitwarden"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres.bitwarden-psql.credentials.postgresql.acid.zalan.do
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres.bitwarden-psql.credentials.postgresql.acid.zalan.do
                  key: username
            - name: DEBUG
              value: "false"
            - name: S3_ACCESS_KEY_ID
              value: "AKIAXXXXXXXXXXXXXXXXX"
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-access-key
                  key: access-key
            - name: S3_REGION
              value: "eu-west-1"
            - name: S3_BUCKET
              value: "prod-bitwarden"
            - name: S3_PREFIX
              value: "bitwarden"
            - name: ENCRYPTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: encryption-password
                  key: password
